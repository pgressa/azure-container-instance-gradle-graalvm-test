name: Azure Container Instance GraalVM CE CD
on: [push, pull_request]

env:
  AZURE_LOCATION: westeurope
  AZURE_DNS_LABEL: azure-container-instance-gradle-graalvm-test

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.m2/repository
          key: ${{ runner.os }}-gradle-test-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-test-
      - name: Setup GraalVM CE
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm-version: 20.3.0.java11
      - name: Install Native Image
        run: gu install native-image
      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Build And Push Docker Image
        env:
          DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
          DOCKER_REPOSITORY_PATH: ${{ secrets.DOCKER_REPOSITORY_PATH }}
          TESTCONTAINERS_RYUK_DISABLED: true
        run: |
          export DOCKER_IMAGE=`echo "${DOCKER_REGISTRY_URL}/${DOCKER_REPOSITORY_PATH}/azure-container-instance-gradle-graalvm-test" | sed -e 's#//#/#' -e 's#^/##'`
          ./gradlew check dockerPushNative --no-daemon
      - name: Deploy to Azure Container Instances
        env:
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
          DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          DOCKER_IMAGE_REPOSITORY=$(docker images --format "{{.Repository}}" | grep azure-container-instance-gradle-graalvm-test)
          DOCKER_IMAGE=$(docker images --format "{{.Repository}}:{{.Tag}}" "${DOCKER_IMAGE_REPOSITORY}" )

          az container create --resource-group "${AZURE_RESOURCE_GROUP}" \
            --name azure-container-instance-gradle-graalvm-test \
            --registry-login-server "${DOCKER_REGISTRY_URL}" \
            --registry-username "${DOCKER_USERNAME}" \
            --registry-password "${DOCKER_PASSWORD}" \
            --image "${DOCKER_IMAGE}" \
            --dns-name-label "${AZURE_DNS_LABEL}" \
            --ports 8080 \
            --location "${AZURE_LOCATION}"